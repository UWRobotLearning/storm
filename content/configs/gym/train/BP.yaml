
dataset_path: 'policy_eval/data/mpc_buffer_0.pt'
data_folder: 'policy_eval/data/mpc'

policy:
  mlp_params:
    hidden_layers: [256, 256] 
    activation: torch.nn.ReLU 
    output_activation: null
    dropout_prob: 0.0 
    layer_norm: false
  init_std: 1.0
  min_std: 0.00001
  max_std: 10.0
  std_type: 'heteroscedastic'
  learn_logvar_bounds: false
  use_tanh: false
  world: ${task.world}
  rollout: ${task.rollout}

critic:
  mlp_params:
    hidden_layers: [256, 256] 
    activation: torch.nn.ReLU 
    output_activation: null
    dropout_prob: 0.0 
    layer_norm: false
  ensemble_size: 2
  prediction_size: 2

agent:
  name: 'BP'
  max_buffer_size: 1e6
  num_pretrain_steps: 100000
  train_batch_size: 256
  # policy_optimizer:
  #   __target__: torch.optim.Adam
  #   lr: 3e-4
  # critic_optimizer:
  #   __target__: torch.optim.Adam
  #   lr: 3e-4
  optimizer:
    __target__: torch.optim.Adam
    lr: 1e-3 #3e-4
  polyak_tau: 5e-3
  log_freq: 100
  checkpoint_freq: 5000
  eval_freq: 1000
  eval_first_policy: false
  num_eval_episodes: 2
  policy_use_tanh: ${train.policy.use_tanh}
  # learn_deterministic_policy: false
  policy_loss_type: nll
  num_action_samples: 1
  fixed_alpha: 0.2
  relabel_data: true
  load_pretrained_policy: false
  pretrain_critic: true
  discount: 0.99
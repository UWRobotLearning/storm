
world: ${task.world}
robot: ${task.robot}
viz_rollouts: False

model:
    # any link that is not specified as learnable will be initialized from urdf
    # urdf_path: ${task.robot_urdf}
    robot: ${..robot}
    dt_traj_params:
      base_dt: 0.02 #0.02 #0.0166 #0.01 #0.02
      base_ratio: 1.0 #0.5
      max_dt: 0.04
    init_state: [0.8, 0.3, 0.0, -1.57, 0.0, 1.86, 0.] #check
    control_space: ${task.task.control_space}
    link_names: ${task.task.robot_link_names}
    robot_keys: ['q_pos', 'q_vel', 'q_acc']
    n_dofs: ${task.n_dofs}

# robot_collision_params: ${task.task.robot_collision_params}
task:
  num_instances: ${task.env.num_envs}
  max_acc: ${task.task.max_acc} 
  max_jerk: ${task.task.max_jerk}
  n_dofs: ${task.n_dofs}
  ee_link_name: ${task.ee_link_name}
  robot: ${..robot}
  world_collision_params: ${task.task.world_collision_params}
  object: ${task.task.object} 

  cost:
    friction_cone_cost:
      weight: 0.0 #2.5
      tangential_cost_weight: 0.0

    goal_pose:
      vec_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      weight: [0.2, 5.0] #[10.0, 50.0] #[50.0, 100.0]
      cost_type: 'se3_twist'
      norm_type: 'l2'
      hinge_val: -1
      is_hinge: False
      convergence_val: [0.0, 0.0] # orientation, position
      logcosh_alpha: [5.0, 5.0] #orientation, position (shaping used only for logcosh)

    ee_vel_twist:
      weight: 9e-2 #0.0 #3e-3 #1.0
      norm_type: 'l2'
      # hinge_val: 0.01
      # vec_weight: [1.0, 1.0, 1.0] 

    ee_acc_twist:
      weight: 0.0
      norm_type: 'l2'
      # vec_weight: [1.0, 1.0, 1.0] 

    zero_q_vel:
      weight: 9e-2 
      norm_type: 'l2'
      # hinge_val: 0.2 #0.2

    zero_q_acc:
      weight: 0.0 # 1e-4 #1e-1 #0.01
      norm_type: 'l2'
      # hinge_val: -1.0

    zero_q_jerk:
      weight: 0.0 #1e-3
      norm_type: 'l2'
      # hinge_val: -1.0
      
    manipulability:
      weight: 0.0 #3.0 #0.5 #30.0 #10.0 #100.0 #0.05 #0.5 #1.0
      thresh: 0.1 #0.1 #0.05 #0.03

    joint_l2:
      weight: 0.0
      norm_type: 'l2'

    stop_cost:
      weight: 0.0 #50.0 #50.0 #10.0 #10.0 
      max_nlimit: 7.0 #1.5 #0.2

    stop_cost_acc:
      weight: 0.0
      max_limit: 0.1 #0.2

    smooth_cost:
      weight: 0.0
      order: 1

    primitive_collision:
      weight: 200.0
      distance_threshold_world: 0.01
      distance_threshold_self: 0.01

    state_bound:
      weight: 200.0 
      bound_thresh: 0.01

    retract_state : [0.00, 0.0, 0.00, -1.5, 0.00, 2.0, 0.0] #check
    retract_weight: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,0.0] #check

# world: ${task.world}
# viz_rollouts: False

mppi:
  state_batch_size  : 1
  horizon           : 20
  init_cov          : 0.2 #0.02 #0.005 #.5 #.5
  gamma             : 0.99 #0.98
  td_lam            : 1.0
  n_iters           : 1
  step_size_mean    : 0.9
  step_size_cov     : 0.1 #0.5
  beta              : 0.1 #0.05
  alpha             : 1
  num_particles     : 400 #1000 #10000
  update_cov        : True
  cov_type          : 'full_AxA' # 
  kappa             : 0.05
  null_act_frac     : 0.01
  cl_act_frac       : 1.0
  use_cl_std        : False #whether to use std of closed loop policy for exploration
  base_action       : 'repeat'
  squash_fn         : 'clamp'
  hotstart          : True
  normalize_returns : True
  visual_traj       : 'ee_pos_seq'
  sample_params:
    type: 'multiple'
    fixed_samples: True
    sample_ratio: {'halton': 0.0, 'halton-knot': 1.0, 'random': 0.0, 'random-knot': 0.0}
    seed: 0
    filter_coeffs: null #[0.3, 0.3, 0.4]
    knot_scale: 4
    bspline_degree: 3